author: Joshua Fontany
core-version: >=5.1.14
created: 20171118214021120
dependents: $:/plugins/telarus/fontawesome $:/plugins/telarus/jsonmangler
description: An HTML+Wikitext Table Renderer Plugin for TiddlyWiki
list: readme license
modified: 20171118214021120
plugin-type: plugin
source: https://github.com/joshuafontany/TW5-RenderTablePlugin
title: $:/plugins/telarus/rendertable
type: application/json
version: 0.1.1

{
    "tiddlers": {
        "$:/plugins/telarus/rendertable/license": {
            "title": "$:/plugins/telarus/rendertable/license",
            "type": "text/plain",
            "text": "Copyright (c) 2017, Joshua Fontany\r\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        "$:/plugins/telarus/rendertable/readme": {
            "title": "$:/plugins/telarus/rendertable/readme",
            "text": "This is an HTML+Wikitext Table Renderer plugin for ~TiddlyWiki.\n\nhttps://github.com/joshuafontany/TW5-RenderTablePlugin\n\nSee the example Wiki for usage details:\n\nhttps://joshuafontany.github.io/TW5-RenderTablePlugin/"
        },
        "$:/plugins/telarus/rendertable/Macros/Body": {
            "text": "\\define tiddlerRowList()\n<$list filter=<<tiddlerRowsEncoded>> variable=\"rowtiddler_encoded\"><<rowtiddler_encoded>> </$list>\n\\end\n\n\\define arrayRowList()\n<$list filter=<<tiddlerRowsEncoded>> variable=\"rowtiddler_encoded\"><$list filter=<<arrayTiddlerRowsEncoded>> variable=\"rowpath_encoded\"><<rowtiddler_encoded>>!!<<rowpath_encoded>> </$list><$list filter=<<arrayDataRowsEncoded>> variable=\"rowpath_encoded\"><<rowtiddler_encoded>>!!<<rowpath_encoded>> </$list></$list>\n\\end\n\n\\define RenderBody()\n<$list filter=<<RowsDecoded>> variable=\"rowentity\">\n<$set name=\"rowtiddler\" filter=<<$(mode)$RowTiddler>> >\n<$set name=\"rowpath\" filter=<<$(mode)$RowPath>> >\n<tr>\n<$list filter=<<TableHeaderFilter>> variable=\"col\">\n<$set name=\"fieldname\" filter=<<FieldName>> >\n<<RenderCell>>\n</$set>\n</$list>\n</tr>\n</$set>\n</$set>\n</$list>\n\\end\n\n\\define UnfilteredBody()\n<$wikify name=\"rowlist\" text=<<$(mode)$RowList>> >\n<<RenderBody>>\n</$wikify>\n\\end\n\n\\define TableBody()\n<tbody>\n<$list filter=\"[[$(tablestate)$]has:field[filter-list]]\" variable=\"test\" emptyMessage=<<UnfilteredBody>> >\n<$set name=\"rowlist\" value={{$(tablestate)$!!filter-list}} >\n<<RenderBody>>\n</$set>\n</$list>\n</tbody>\n\\end\n\n<pre><$view field=\"text\"/></pre>",
            "bag": "default",
            "revision": "11",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/Macros/Body",
            "tags": "$:/tags/Macro",
            "modified": "20171117230412688",
            "created": "20171007075732862"
        },
        "$:/plugins/telarus/rendertable/Macros/Caption": {
            "text": "\\define TableCaption()\n<$list filter=\"[{$(schema)$##table.caption}] +[{$(schema)$##table.filterable}] +[limit[1]]\" variable=\"showcaption\">\n<div class={{{[{$(schema)$##table.caption-class}addprefix[caption ]]}}} style={{$(schema)$##table.caption-style}} >\n<div class=\"tablecontrols\">\n<$list filter=\"[[$(schema)$]getindex[table.filterable]]\" variable=\"showfilter\">\n<$transclude tiddler=\"$:/plugins/telarus/rendertable/UI/Button/Filter\" />\n</$list>\n</div>\n<$list filter=\"[[$(schema)$]getindex[table.description]]\" variable=\"showdescription\" emptyMessage=\"\"\"<$transclude tiddler=<<schema>> index=\"table.caption\" />\"\"\">\n<$wikify name=\"captionpopup\" text=\"$(tablestate)$-captionpopup\" >\n<$button class=\"tc-btn-invisible\"  style={{$(schema)$##table.caption-style}} popup=<<captionpopup>> >\n {{$(schema)$##table.caption}}\n</$button>\n<$reveal type=\"popup\" state=<<captionpopup>> tag=\"div\" class=\"tc-drop-down header-popup\" style=\"padding: 1em;\">\n<h2 style=\"margin: 0.2em 0em;\"><$transclude tiddler=\"$(schema)$\" index=\"table.caption\" /></h2>\n<$transclude tiddler=\"$(schema)$\" index=\"table.description\" />\n</$reveal>\n</$wikify>\n</$list>\n</div>\n</$list>\n\\end\n\n<pre><$view field=\"text\"/></pre>",
            "bag": "default",
            "revision": "0",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/Macros/Caption",
            "tags": "$:/tags/Macro",
            "modified": "20171115222204431",
            "created": "20171017005439032"
        },
        "$:/plugins/telarus/rendertable/Macros/Cells": {
            "text": "\\define defaultCell()\n<$list filter=\"[<rowtiddler>get[type]!regexp[application\\/json]!regexp[application\\/x-tiddler-dictionary]]\" variable=\"\" emptyMessage=<<dataCell>> >\n<$transclude tiddler=<<rowtiddler>> field=<<fieldname>> />\n</$list>\n\\end\n\n\\define dataCell()\n<$list filter=\"[<fieldname>!regexp[^title$]]\" variable=\"\" emptyMessage=\"\"\"<$transclude tiddler=<<rowtiddler>> field=<<fieldname>> />\"\"\" >\n<$transclude tiddler=<<rowtiddler>> index=<<fieldname>> />\n</$list>\n\\end\n\n\\define RenderCell()\n<td class={{$(schema)$##fields$(col)$.field-class}} style={{$(schema)$##fields$(col)$.field-style}} >\n<$list filter=\"[{$(schema)$##fields$(col)$.template}!regexp[^$]]\" variable=\"template\" emptyMessage=<<defaultCell>> >\n<$importvariables filter=\"[<template>]\">\n<<CellTemplate>>\n</$importvariables>\n</$list>\n</td>\n\\end\n\n<pre><$view field=\"text\"/></pre>",
            "bag": "default",
            "revision": "0",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/Macros/Cells",
            "tags": "$:/tags/Macro",
            "modified": "20171117192133335",
            "created": "20171010000628542"
        },
        "$:/plugins/telarus/rendertable/Macros/Filters": {
            "text": "\\define TableHeaderFilter() [[$(schema)$]indexes[]removeprefix[fields]removesuffix[.@name]nsort[]]\n\n\\define FieldName() [{$(schema)$##fields$(col)$.@name}addprefix<rowpath>]\n\n\\define tiddlerRowsEncoded()  $(datafilter)$ +[encodeuricomponent[]nsortcs[]]\n\n\\define arrayTiddlerRowsEncoded() [<rowtiddler_encoded>decodeuricomponent[]fields[]regexp[^$(datapath)$..?\\d+..$(primarykey)$]removesuffix[.$(primarykey)$]nsortcs[]encodeuricomponent[]]\n\n\\define arrayDataRowsEncoded() [<rowtiddler_encoded>decodeuricomponent[]indexes[]regexp[^$(datapath)$..?\\d+..$(primarykey)$]removesuffix[.$(primarykey)$]nsortcs[]encodeuricomponent[]] \n\n\\define RowsDecoded() $(rowlist)$ +[sortby{$(tablestate)$!!sort-list}decodeuricomponent[]]\n\n\\define tiddlerRowTiddler() [<rowentity>]\n\\define arrayRowTiddler() [<rowentity>splitbefore[!!]removesuffix[!!]]\n\n\\define arrayRowPath() [<rowentity>removeprefix<rowtiddler>removeprefix[!!]addsuffix[.]]\n\n<pre><$view field=\"text\"/></pre>",
            "bag": "default",
            "revision": "1",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/Macros/Filters",
            "tags": "$:/tags/Macro",
            "modified": "20171117225456829",
            "created": "20171018013537116"
        },
        "$:/plugins/telarus/rendertable/Macros/Footers": {
            "text": "\\define TFStyle() position:relative; {{$(schema)$##fields$(col)$.footer-style}}\n\n\\define TFooter()\n<th class={{$(schema)$##fields$(col)$.header-class}} style=<<TFStyle>> class={{$(schema)$##fields$(col)$.footer-class}}>\n<$list filter=\"[[$(schema)$]getindex[fields$(col)$.description]]\" variable=\"\" emptyMessage=\"\"\"{{$(schema)$##fields$(col)$.caption}}\"\"\">\n<$wikify name=\"footerpopup\" text={{{ [<col>encodeuri[]addprefix[$(tablestate)$-footerpopup]] }}} >\n<$button class=\"tc-btn-invisible\"  popup=<<footerpopup>> >\n {{$(schema)$##fields$(col)$.caption}}\n</$button>\n<$reveal type=\"popup\" position=\"above\" state=<<footerpopup>> tag=\"div\" class=\"tc-drop-down footer-popup\">\n\n;<$transclude tiddler=\"$(schema)$\" index=\"fields$(col)$.caption\" /> (<$transclude tiddler=\"$(schema)$\" index=\"fields$(col)$.@name\" />)\n:<$transclude tiddler=\"$(schema)$\" index=\"fields$(col)$.description\" />\n</$reveal>\n</$wikify>\n</$list>\n<$list filter=\"[[$(schema)$]getindex[table.sortable]]\" variable=\"\" >\n<div class=\"sortable\">\n<$transclude tiddler=\"$:/plugins/telarus/rendertable/UI/Button/Sort\" />\n</div>\n</$list>\n</th>\n\\end\n\n\\define AddFooterCells()\n<th colspan={{$(schema)$##footers$(frow)$$(fcell)$.colspan}} rowspan={{$(schema)$##footers$(frow)$$(fcell)$.rowspan}} class={{$(schema)$##fields$(col)$.footer-class}} style={{$(schema)$##fields$(col)$.footer-style}}>\n<$transclude tiddler={{$(schema)$##footers$(frow)$$(fcell)$.template}} mode=\"block\"/>\n</th>\n\\end\n\n\n\\define TableFooters()\n<tfoot>\n<!-- Auto footers -->\n<$list filter=\"[[$(schema)$]getindex[table.headers]!regexp[false]]\" variable=\"\">\n<tr>\n<$list filter=<<TableHeaderFilter>> variable=\"col\">\n<<TFooter>>\n</$list>\n</tr>\n</$list>\n<!-- Additional Footers -->\n<$set name=\"zeroindex\" value=\"col[0]\">\n<$list filter=\"[[$(schema)$]indexes[]removeprefix[footers]removesuffix[.template]removesuffix<zeroindex>sort[]]\" variable=\"frow\">\n<tr>\n<$list filter=\"[[$(schema)$]indexes[]removeprefix[footers]removeprefix<frow>removesuffix[.template]sort[]]\" variable=\"fcell\" >\n<<AddFooterCells>>\n</$list>\n</tr>\n</$list>\n</$set>\n</tfoot>\n\\end\n<pre><$view field=\"text\"/></pre>",
            "bag": "default",
            "revision": "0",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/Macros/Footers",
            "tags": "$:/tags/Macro",
            "modified": "20171115224630499",
            "created": "20171007075746845"
        },
        "$:/plugins/telarus/rendertable/Macros/Headers": {
            "text": "\\define THStyle() position:relative; {{$(schema)$##fields$(col)$.header-style}}\n\n\\define AddHeaderCells()\n<th colspan={{$(schema)$##headers$(hrow)$$(hcell)$.colspan}} rowspan={{$(schema)$##headers$(hrow)$$(hcell)$.rowspan}} class={{$(schema)$##fields$(col)$.header-class}} style={{$(schema)$##fields$(col)$.header-style}}>\n<$transclude tiddler={{$(schema)$##headers$(hrow)$$(hcell)$.template}} mode=\"block\"/>\n</th>\n\\end\n\n\\define THeader()\n<th class={{$(schema)$##fields$(col)$.header-class}} style=<<THStyle>> class={{$(schema)$##fields$(col)$.header-class}}>\n<$list filter=\"[[$(schema)$]getindex[fields$(col)$.description]]\" variable=\"\" emptyMessage=\"\"\"{{$(schema)$##fields$(col)$.caption}}\"\"\">\n<$wikify name=\"headerpopup\" text={{{ [<col>encodeuri[]addprefix[$(tablestate)$-headerpopup]] }}} >\n<$button class=\"tc-btn-invisible\"  style={{$(schema)$##fields$(col)$.header-style}} popup=<<headerpopup>> >\n {{$(schema)$##fields$(col)$.caption}}\n</$button>\n<$reveal type=\"popup\" state=<<headerpopup>> tag=\"div\" class=\"tc-drop-down header-popup\" >\n\n;<$transclude tiddler=\"$(schema)$\" index=\"fields$(col)$.caption\" /> (<$transclude tiddler=\"$(schema)$\" index=\"fields$(col)$.@name\" />)\n:<$transclude tiddler=\"$(schema)$\" index=\"fields$(col)$.description\" />\n</$reveal>\n</$wikify>\n</$list>\n<$list filter=\"[[$(schema)$]getindex[table.sortable]]\" variable=\"\" >\n<div class=\"sortable\">\n<$transclude tiddler=\"$:/plugins/telarus/rendertable/UI/Button/Sort\" />\n</div>\n</$list>\n</th>\n\\end\n\n\\define TableHeaders()\n<thead>\n<!-- Additional Headers -->\n<$set name=\"zeroindex\" value=\"col[0]\">\n<$list filter=\"[[$(schema)$]indexes[]removeprefix[headers]removesuffix[.template]removesuffix<zeroindex>sort[]]\" variable=\"hrow\">\n<tr>\n<$list filter=\"[[$(schema)$]indexes[]removeprefix[headers]removeprefix<hrow>removesuffix[.template]sort[]]\" variable=\"hcell\" >\n<<AddHeaderCells>>\n</$list>\n</tr>\n</$list>\n</$set>\n<!-- Auto Headers -->\n<$list filter=\"[[$(schema)$]getindex[table.headers]!regexp[false]]\" variable=\"\">\n<tr>\n<$list filter=<<TableHeaderFilter>> variable=\"col\">\n<<THeader>>\n</$list>\n</tr>\n</$list>\n</thead>\n\\end\n\n<pre><$view field=\"text\"/></pre>",
            "bag": "default",
            "revision": "0",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/Macros/Headers",
            "tags": "$:/tags/Macro",
            "modified": "20171117192756530",
            "created": "20171007075601342"
        },
        "$:/plugins/telarus/rendertable/Macros/RenderTable": {
            "text": "\\define QualifyTable() <<qualify $(schema)$>>\n\n\\define TableState() $:/table/<<QualifyTable>>/<<mode>>/{{{[<datafilter>encodeuri[]]}}}.{{{[<datapath>encodeuri[]]}}}\n\n\\define RenderTable()\n<$set name=\"primarykey\" value={{$(schema)$##table.@primarykey}}>\n<div class=\"tablewrapper\">\n<<TableCaption>>\n<div class=\"scrollable\">\n<table class={{$(schema)$##table.class}} style={{$(schema)$##table.style}} >\n<<TableHeaders>>\n<<TableFooters>>\n<<TableBody>>\n</table>\n</div>\n</div>\n</$set>\n\\end\n\n<pre><$view field=\"text\"/></pre>",
            "bag": "default",
            "revision": "0",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/Macros/RenderTable",
            "tags": "$:/tags/Macro",
            "modifier": "Josh F",
            "modified": "20171102215039691",
            "creator": "Josh F",
            "created": "20170921053951384"
        },
        "$:/plugins/telarus/rendertable/Macros/table": {
            "text": "\\define table(schema mode datafilter datapath tablestate)\n<$rendertable schema=\"$schema$\" mode=\"$mode$\" datafilter=\"$datafilter$\" datapath=\"$datapath$\" tablestate=\"$tablestate$\" />\n\\end\n\n<pre><$view field=\"text\"/></pre>",
            "bag": "default",
            "revision": "0",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/Macros/table",
            "tags": "$:/tags/Macro",
            "modified": "20171115214550356",
            "created": "20171016201318094"
        },
        "$:/plugins/telarus/rendertable/Stylesheets/Table": {
            "text": ".tablewrapper {\nwhite-space: nowrap; \ndisplay: inline;\n}\n\n.caption{\nfloat: left;\npadding-right: 0.4em; \nvertical-align: middle; \n}\n\n.tablecontrols, .sortable {\ndisplay: inline-block;\nmargin: 0em 0.2em;\nvertical-align: bottom; \n}\n\n.scrollable {\ndisplay: block; \noverflow-x: auto; \nheight: 100%; \nwidth: 100%; \nclear: left;\n}\n\ntable {\noverflow-y: auto; \nmargin-top: 0em; \nmargin-bottom: 0em;\n}\n\ntable td { \n  vertical-align: top; \n}\n\ntable th, .header, .caption {\nbackground-color: <<color table-header-background>>;\nfont-weight: bold;\ntext-align: left;\n}\n\n.caption {white-space: normal;}\n\n.filter-float{\n    float: left;\n    display: inline-block;\n    margin: 0.2em;\n    vertical-align: middle; \n}\n\n.filter-control {\n    display: inline-block;\n    margin: 0.2em;\n    vertical-align: middle;\n}\n\n.filter-control button, .filter-control a{\n    display: inline-block;\n    width: auto;\n    vertical-align: middle; \n    padding: 0em;\n}\n\n.filter-control button span, .filter-control button span i, .filter-flag, .filter-flag span, .filter-flag input {\n    display: inline-block;\n    vertical-align: middle;\n}\n\n.tablecontrols .tc-drop-down{\n    font-weight: normal;\n    width: 32em;\n}\n\n.tablecontrols .tc-drop-down ul {\n    display: inline-block;\n    margin: 0em 0.2em;\n    white-space: normal;\n}\n\n.caption .tc-drop-down a, .caption .tc-drop-down button {\n    display: inline-block;\n    width: auto;\n}\n\n.filter-flag input {\n    margin: 0em 0.2em;\n}\n\n.fa-dim {\ncolor: <<color sidebar-controls-foreground>>;\n}\n\n.fa-dim:hover {\ncolor: <<color sidebar-controls-foreground-hover>>;\n}\n\n.fa-focus {\ncolor: <<color sidebar-controls-foreground-hover>>;\n}\n\n.fa-defocus {\ncolor: <<color sidebar-controls-foreground>>;\n}\n\n.header-popup, .footer-popup {\n    padding: 0.5em;\n}",
            "bag": "default",
            "revision": "0",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/Stylesheets/Table",
            "tags": "$:/tags/Stylesheet",
            "modified": "20171115224752141",
            "created": "20170925054623838"
        },
        "$:/plugins/telarus/rendertable/UI/Actions/SortFilter": {
            "text": "\\define Sort-Actions()\n<$action-setfield $tiddler=<<tablestate>> $field=\"sort-order\" $value=<<sortorder>> />\n<$action-setfield $tiddler=<<tablestate>> $field=\"sort-by\" $value={{$(schema)$##fields$(col)$.@name}} />\n<$action-sendmessage $message=\"tm-table-sort\" tablestate=<<tablestate>> col=<<col>> />\n\\end\n\n\\define Filter-Apply()\n<$action-setfield $tiddler=<<tablestate>> $field=\"filter-applied\" $value={{$(tablestate)$!!filter-input}} />\n<$action-sendmessage $message=\"tm-table-filter\" tablestate=<<tablestate>> />\n\\end\n\n\\define Filter-Reset()\n<$action-setfield $tiddler=<<tablestate>> $field=\"filter-input\" $value={{$(tablestate)$!!filter-applied}} />\n\\end\n\n\\define Filter-Clear()\n<$action-deletefield $tiddler=\"$(tablestate)$\" $field=\"filter-input\"/>\n<$action-deletefield $tiddler=\"$(tablestate)$\" $field=\"filter-applied\"/>\n<$action-sendmessage $message=\"tm-table-filter\" tablestate=<<tablestate>> />\n\\end\n\n<pre><$view field=\"text\"/></pre>",
            "bag": "default",
            "revision": "0",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/UI/Actions/SortFilter",
            "tags": "$:/tags/Macro",
            "modified": "20171023213729055",
            "created": "20171015014400000"
        },
        "$:/plugins/telarus/rendertable/UI/Button/ClearFilter": {
            "text": "\\define Filter-Reset()\n<$action-deletefield $tiddler=\"$(tablestate)$\" $field=\"filter\"/>\n<$action-deletefield $tiddler=\"$(tablestate)$\" $field=\"filtered.rowtiddlers\"/>\n<$action-deletefield $tiddler=\"$(tablestate)$\" $field=\"filtered.rowindexes\"/>\n\\end\n\n\\define Filter-State()\n[[$(tablestate)$]get[filter]limit[1]]\n\\end\n\n<$list filter=<<Filter-State>> variable=\"show\">\n<$button class=\"tc-btn-invisible\" tooltip=\"Reset this filter\" actions=<<Filter-Reset>> >\n<<fa-icon \"ban\" \"fa-dim\">>\n</$button>\n</$list>",
            "bag": "default",
            "revision": "0",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/UI/Button/ClearFilter",
            "tags": "",
            "modified": "20171014225115874",
            "created": "20171014211722198"
        },
        "$:/plugins/telarus/rendertable/UI/Button/Filter": {
            "text": "<$set name=\"popup-state\" value=\"$(tablestate)$-filterpopup\">\n<$button class=\"tc-btn-invisible\" tooltip=\"Filter this table\" popup=<<popup-state>> >\n<$list filter=\"[<tablestate>has[filter-applied]]\" variable=\"\">\n<<fa-icon \"filter\" \"fa-lg fa-focus\">>\n</$list>\n<$list filter=\"[<tablestate>!has[filter-applied]]\" variable=\"\">\n<<fa-icon \"filter\" \"fa-lg fa-dim\">>\n</$list>\n</$button>\n<$reveal type=\"popup\" state=<<popup-state>> class=\"tc-popup-keep\">\n<div class=\"tc-drop-down\">\n<$transclude tiddler=\"$:/plugins/telarus/rendertable/UI/Input/FilterTable\" />\n</div>\n</$reveal>\n</$set>\n<$list filter=\"[<tablestate>has[filter-applied]]\" variable=\"\">\n<$button class=\"tc-btn-invisible\" tooltip=\"Clear filter\" actions=<<Filter-Clear>> >\n<<fa-icon \"close\" \"fa-lg fa-dim\">>\n</$button>\n</$list>",
            "bag": "default",
            "revision": "0",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/UI/Button/Filter",
            "tags": "",
            "modified": "20171104022247023",
            "filter": "",
            "created": "20171014200257888"
        },
        "$:/plugins/telarus/rendertable/UI/Button/Sort": {
            "text": "\\define SortIcon() <<fa-icon \"sort-$(sortorder)$\" \"fa-fw fa-lg\">>\n\n\\define SortNoMatch()\n<$set name=\"sortorder\" value=\"asc\" >\n<$button class=\"tc-btn-invisible\" tooltip=\"Sort Ascending\" actions=<<Sort-Actions>> >\n<<fa-icon \"sort\" \"fa-fw fa-lg fa-dim\">>\n</$button>\n</$set>\n\\end\n\n\\define SortMatch()\n<$list filter=\"[{$(tablestate)$!!sort-order}regexp[asc]]\" variable=\"\">\n<$set name=\"sortorder\" value=\"desc\" >\n<$button class=\"tc-btn-invisible\" tooltip=\"Sorted Ascending\" actions=<<Sort-Actions>> >\n<<SortIcon>>\n</$button>\n</$set>\n</$list>\n<$list filter=\"[{$(tablestate)$!!sort-order}regexp[desc]]\" variable=\"\">\n<$set name=\"sortorder\" value=\"asc\" >\n<$button class=\"tc-btn-invisible\" tooltip=\"Sorted Descending\" actions=<<Sort-Actions>> >\n<<SortIcon>>\n</$button>\n</$set>\n</$list>\n\\end\n\n\\define SortButton()\n<$list filter=\"[{$(tablestate)$!!sort-by}regexp{$(schema)$##fields$(col)$.@name}]\" variable=\"\" emptyMessage=<<SortNoMatch>> >\n<<SortMatch>>\n</$list>\n\\end\n\n<<SortButton>>",
            "bag": "default",
            "revision": "0",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/UI/Button/Sort",
            "tags": "",
            "modified": "20171117193742133",
            "created": "20171008011535138"
        },
        "$:/plugins/telarus/rendertable/UI/Input/FilterTable": {
            "text": "<div class=\"filter-float\">\n<$list filter=\"[<tablestate>has[filter-applied]]\" variable=\"\">\n<<fa-icon \"filter\" \"fa-3x fa-focus\">>\n</$list>\n<$list filter=\"[<tablestate>!has[filter-applied]]\" variable=\"\">\n<<fa-icon \"filter\" \"fa-3x fa-defocus\">>\n</$list>\n</div>\n<div class=\"filter-control\">\n<$button class=\"tc-btn-invisible\" tooltip=\"Apply filter\" actions=<<Filter-Apply>> >\n<<fa-icon \"check-square\" \"fa-lg fa-dim\">>\n</$button>\n<$button class=\"tc-btn-invisible\" tooltip=\"Clear filter\" actions=<<Filter-Clear>> >\n<<fa-icon \"window-close\" \"fa-lg fa-dim\">>\n</$button>\n<$edit-text tiddler=<<tablestate>> field=\"filter-input\" type=\"search\" tag=\"input\" default=\"\" class=\"filter-input\" style=\"margin: 2px;\"/>\n<$button class=\"tc-btn-invisible\" tooltip=\"Reset input to last applied filter\" actions=<<Filter-Reset>> >\n<<fa-icon \"undo\" \"fa-lg fa-fw fa-dim\">>\n</$button>\n</div>\n<br/>\n<div class=\"filter-control\">\n<$checkbox tiddler=<<tablestate>> field=\"filter-insensitive\" checked=\"true\" unchecked=\"\" default=\"\" class=\"filter-flag\"> Case Insensitive?</$checkbox>\n<br/>\n<$checkbox tiddler=<<tablestate>> field=\"filter-invert\" checked=\"true\" unchecked=\"\" default=\"\" class=\"filter-flag\"> Invert? (Hides Matches)</$checkbox>\n</div>\n<br/>\n<div class=\"filter-control\">\n<ul>\n<li>See <a href=\"https://regexr.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Regexr.com</a> for a comprehensive Regex quick reference.</li>\n<li>Rows are wikified into an array of cell content separated by the newline symbol (\\n). All filtering uses the multiline flag when determining matches.</li>\n<li>Wikification is done at the time the filter is applied & will not auto update with changes to the wiki's tiddlers. Re-apply the filter to view up-to-date data.</li>\n</ul>\n</div>",
            "bag": "default",
            "revision": "0",
            "type": "text/vnd.tiddlywiki",
            "title": "$:/plugins/telarus/rendertable/UI/Input/FilterTable",
            "tags": "",
            "modified": "20171107035013453",
            "filter-insensitive": "",
            "created": "20171007221618056"
        },
        "$:/plugins/telarus/rendertable/Widgets/rendertable.js": {
            "text": "/*\\\ntitle: $:/plugins/telarus/rendertable/Widgets/rendertable.js\ntype: application/javascript\nmodule-type: widget\n\nRender table widget <$rendertable></$rendertable>.\nThe contents are set automatically by the <<RenderTable>> macro.\nIt is called automatically by the <<table schema mode datafilter datapath tablestate>> macro.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\n\n/*\nInitialize and add event listenders\n*/\nvar RenderTableWidget = function(parseTreeNode,options) {\n\tthis.initialise(parseTreeNode,options);\n\tthis.addEventListeners([\n\t\t{type: \"tm-table-filter\", handler: \"handleTableFilterEvent\"},\n\t\t{type: \"tm-table-sort\", handler: \"handleTableSortEvent\"}       \n\t]);\n};\n\n/*\nInherit from the base widget class\n*/\nRenderTableWidget.prototype = new Widget();\n\n/*\nRender this widget into the DOM\n*/\nRenderTableWidget.prototype.render = function (parent, nextSibling) {\n    //console.log(\"Render Table\");\n\tthis.parentDomNode = parent;\n\tthis.computeAttributes();\n\tthis.execute();\n\tvar domNode = this.document.createElement(\"div\");\n\tparent.insertBefore(domNode,nextSibling);\n\tthis.renderChildren(domNode,null);\n\tthis.domNodes.push(domNode);\n};\n\n/*\nCompute the internal state of the widget\n*/\nRenderTableWidget.prototype.execute = function() {\n\t// Get our parameters\n\tthis.schema = this.getAttribute(\"schema\", this.getVariable(\"schema\"));\n\tthis.mode = this.getAttribute(\"mode\", this.getVariable(\"mode\"));\n\tthis.datafilter = this.getAttribute(\"datafilter\", this.getVariable(\"datafilter\"));\n\tthis.datapath = this.getAttribute(\"datapath\", this.getVariable(\"datapath\"));\n\tthis.tablestate  = this.getAttribute(\"tablestate \", this.getVariable(\"tablestate \"));\n\n\tvar TableString = \"\";\n\tif( !this.schema) TableString = \"(!) Error: No table schema provided.\";\n\tif( !this.mode) this.mode = \"tiddler\";\n\tif( !this.datafilter) this.datafilter = this.schema;\n\tif( this.schema == this.datafilter && !this.datapath) this.datapath = \"table_data\";\n\n\tTableString += \"<$vars schema=\\\"\"+this.schema+\"\\\" mode=\\\"\"+this.mode+\"\\\" datafilter=\\\"\"+this.datafilter+\"\\\" datapath=\\\"\"+this.datapath+\"\\\">\"\n\tif( !this.tablestate ) TableString += \"<$wikify name=\\\"tablestate\\\" text=<<TableState>>>\";\n\tif( this.tablestate ) TableString += \"<$set name=\\\"tablestate\\\" value=\\\"\"+this.tablestate+\"\\\" >\";\n\tTableString += \"<<RenderTable>>\";\n\tif( !this.tablestate ) TableString += \"</$wikify>\";\n\tif( this.tablestate ) TableString += \"</$set>\";\n\tTableString += \"</$vars>\";\n\n\t// Construct the child widgets: this.makeChildWidgets();\n\t//This is the part that actually displays the bar in the wiki\n\tvar parser = this.wiki.parseText(\"text/vnd.tiddlywiki\",TableString,{parseAsInline: false});\n\tvar parseTreeNodes = parser ? parser.tree : [];\n\tthis.makeChildWidgets(parseTreeNodes);\n};\n\n/*\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\n*/\nRenderTableWidget.prototype.refresh = function(changedTiddlers) {\n\tvar changedAttributes = this.computeAttributes();\n\tif(changedAttributes.tiddler) {\n\t\tthis.refreshSelf();\n\t\treturn true;\n\t} else {\n\t\treturn this.refreshChildren(changedTiddlers);\t\t\n\t}\n};\n\n/* Event Functions */\nRenderTableWidget.prototype.handleTableFilterEvent= function(event) {\n    this.tablestate = event.paramObject.tablestate;\n\tvar regex, result, renderedentities, rowentities;\n\tvar tiddler = this.wiki.getTiddler(this.tablestate);\n\tvar filterinput = tiddler.fields[\"filter-input\"];\n\tvar filterinsensitive = tiddler.fields[\"filter-insensitive\"];\n\tvar filterinvert = tiddler.fields[\"filter-invert\"];\n\tvar flags = \"m\";\n\tflags += (filterinsensitive)?\"i\":\"\";\n\t//handle invalid regex and alert the user\n\ttry {\n\t\tregex = new RegExp(filterinput, flags);\n\t}\n\tcatch(e) {\n\t\tvar errorstring = e.toString();\n\t\terrorstring = errorstring.replace(/:/g, \"\\n\")\n\t\talert(errorstring);\n\t\tvar modification = this.wiki.getModificationFields();\n\t\tmodification[\"filter-applied\"] = \"\";\n\t\tthis.wiki.addTiddler(new $tw.Tiddler(tiddler,modification));\n\t\treturn true;\n\t}\n\t\n\tvar columns = this.wiki.filterTiddlers(\"[[\"+this.schema+\"]indexes[]removeprefix[fields]removesuffix[.@name]nsort[]]\");\t\n\tvar primarykey = $tw.wiki.getTextReference(this.schema+\"##table.@primarykey\", \"\", this.schema);\n    var modeRowList = \"<$vars schema=\\\"\"+this.schema+\"\\\" mode=\\\"\"+this.mode+\"\\\" datafilter=\\\"\"+this.datafilter+\"\\\" datapath=\\\"\"+this.datapath+\"\\\" tablestate=\\\"\"+this.tablestate+\"\\\" primarykey=\\\"\"+primarykey+\"\\\"><<\"+this.mode+\"RowList>></$vars>\";\n\t\n\trenderedentities = [];\t\n\trowentities = this.wikifyText(modeRowList).trim().split(\" \");\t\n\tfor (var t in rowentities){\n\t\tvar col, colname, template, text;\n\t\tvar newItem = {};\n\t\tnewItem.name = rowentities[t];\n\t\tnewItem.value = \"\";\n\t\tfor (var c in columns) {\n\t\t\t//Start loop through columns here\n\t\t\tcol = columns[c];\n\t\t\tcolname = $tw.wiki.getTextReference(this.schema+\"##fields\"+col+\".@name\", \"\", this.schema);\n\t\t\ttemplate = $tw.wiki.getTextReference(this.schema+\"##fields\"+col+\".template\", \"\", this.schema);\n\t\t\t\n\t\t\ttext = \"<$vars schema=\\\"\"+this.schema+\"\\\" mode=\\\"\"+this.mode+\"\\\" datafilter=\\\"\"+this.datafilter+\"\\\" datapath=\\\"\"+this.datapath+\"\\\" tablestate=\\\"\"+this.tablestate+\"\\\" primarykey=\\\"\"+primarykey+\"\\\" col=\\\"\"+col+\"\\\" template=\\\"\"+template+\"\\\" rowlist=\\\"\"+rowentities+\"\\\" rowentity=\\\"\"+decodeURIComponent(rowentities[t])+\"\\\"><$set name=\\\"rowtiddler\\\" filter=<<\"+this.mode+\"RowTiddler>> ><$set name=\\\"rowpath\\\" filter=<<\"+this.mode+\"RowPath>> ><$set name=\\\"fieldname\\\" filter=<<FieldName>> >\";\n\t\t\tif (!template){\n\t\t\t\ttext += \"<<defaultCell>>\";\n\t\t\t}\n\t\t\telse {\t\t\t\t\n\t\t\t\ttext += \"<$importvariables filter=\\\"[<template>]\\\"><<CellTemplate>></$importvariables>\";\n\t\t\t}\n\t\t\ttext += \"</$set></$set></$set></$vars>\";\t\t\n\t\t\tnewItem.value += this.wikifyText(text);\t\n\t\t\tif (col != columns[columns.length - 1]) newItem.value += \"\\n\";\t\t\n\t\t\t//End loop through columns here\n\t\t}\t\n\t\trenderedentities.push(newItem);\n\t}\n\n\t//Build final list by checking each renderedentity against the regex filter\n\tresult = \"\";\n\tfor (var i=0; i<renderedentities.length; i++) {\n\t\tconsole.log(renderedentities[i].name+\":\"+renderedentities[i].value);\n\t\tif(!filterinvert) {\n\t\t\tif(regex.test(renderedentities[i].value)){\n\t\t\t\tconsole.log(\"match\");\n\t\t\t\tresult += renderedentities[i].name;\n\t\t\t\tif (i<renderedentities.length-1) result += \" \";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif(!regex.test(renderedentities[i].value)){\n\t\t\t\tconsole.log(\"match\");\n\t\t\t\tresult += renderedentities[i].name;\n\t\t\t\tif (i<renderedentities.length-1) result += \" \";\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\t\n    /*Store Sorted RowEntity List*/\n    console.log(\"Result: \"+result);\n    var modification = this.wiki.getModificationFields();\n    modification[\"filter-list\"] = result;\n    this.wiki.addTiddler(new $tw.Tiddler(tiddler,modification));\n    return true;\n};\n\nRenderTableWidget.prototype.handleTableSortEvent= function(event) {\n    this.tablestate = event.paramObject.tablestate;\n\tvar col = event.paramObject.col;\n\tvar result, sortentities, rowentities;\n\tvar tiddler = this.wiki.getTiddler(this.tablestate);\n    var sortby = tiddler.fields[\"sort-by\"];\n    var sortorder = tiddler.fields[\"sort-order\"];\n    //console.log(\"Render Table - Sort Event - \"+sortby+\" - \"+sortorder);\n\t\n\tvar primarykey = $tw.wiki.getTextReference(this.schema+\"##table.@primarykey\", \"\", this.schema);\n    var modeRowList = \"<$vars schema=\\\"\"+this.schema+\"\\\" mode=\\\"\"+this.mode+\"\\\" datafilter=\\\"\"+this.datafilter+\"\\\" datapath=\\\"\"+this.datapath+\"\\\" tablestate=\\\"\"+this.tablestate+\"\\\" primarykey=\\\"\"+primarykey+\"\\\"><<\"+this.mode+\"RowList>></$vars>\";\n\t\n\tsortentities = [];\t\n\trowentities = this.wikifyText(modeRowList).trim().split(\" \");\t\n\tfor (var t in rowentities){\n\t\tvar template, text;\n\t\tvar newItem = {};\n\t\tnewItem.name = rowentities[t];\n\t\t\n\t\ttemplate = $tw.wiki.getTextReference(this.schema+\"##fields\"+col+\".template\", \"\", this.schema);\n\t\t\n\t\ttext = \"<$vars schema=\\\"\"+this.schema+\"\\\" mode=\\\"\"+this.mode+\"\\\" datafilter=\\\"\"+this.datafilter+\"\\\" datapath=\\\"\"+this.datapath+\"\\\" tablestate=\\\"\"+this.tablestate+\"\\\" primarykey=\\\"\"+primarykey+\"\\\" col=\\\"\"+col+\"\\\" template=\\\"\"+template+\"\\\" rowlist=\\\"\"+rowentities+\"\\\" rowentity=\\\"\"+decodeURIComponent(rowentities[t])+\"\\\"><$set name=\\\"rowtiddler\\\" filter=<<\"+this.mode+\"RowTiddler>> ><$set name=\\\"rowpath\\\" filter=<<\"+this.mode+\"RowPath>> ><$set name=\\\"fieldname\\\" filter=<<FieldName>> >\";\n\t\tif (!template){\n\t\t\ttext += \"<<defaultCell>>\";\n\t\t}\n\t\telse {\t\t\t\t\n\t\t\ttext += \"<$importvariables filter=\\\"[<template>]\\\"><<CellTemplate>></$importvariables>\";\n\t\t}\n\t\ttext += \"</$set></$set></$set></$vars>\";\t\t\n\t\tnewItem.value = this.wikifyText(text);\n\t\tsortentities.push(newItem);\n\t}\n\n\t//Do sort()\n\tvar reverseBool = (sortorder == \"desc\") ? true : false;\n\tsortentities.sort(this.sort_by(\"value\", reverseBool, \"\"));\t\n\t\n\tresult = \"\";\n\tfor (var i=0; i<sortentities.length; i++) {\n\t\t//console.log(sortentities[i].name+\":\"+sortentities[i].value);\n\t\tresult += sortentities[i].name;\n\t\tif (i<sortentities.length-1) result += \" \";\n\t}\n\t\n    /*Store Sorted RowEntity List*/\n    //console.log(\"Result: \"+reverseBool.toString()+\" \"+result);\n    var modification = this.wiki.getModificationFields();\n    modification[\"sort-list\"] = result;\n    this.wiki.addTiddler(new $tw.Tiddler(tiddler,modification));\n    return true;\n};\n\n/*Helper Functions*/\nRenderTableWidget.prototype.wikifyText = function (text) {\n\t// Create the parse tree\n\tthis.wikifyParser = this.wiki.parseText(\"text\",text,{\n\t\t\tparseAsInline: this.wikifyMode === \"inline\"\n\t\t});\n\t// Create the widget tree \n\tthis.wikifyWidgetNode = this.wiki.makeWidget(this.wikifyParser,{\n\t\t\tdocument: $tw.fakeDocument,\n\t\t\tparentWidget: this\n\t\t});\n\t// Render the widget tree to the container\n\tthis.wikifyContainer = $tw.fakeDocument.createElement(\"div\");\n\tthis.wikifyWidgetNode.render(this.wikifyContainer,null);\n\t\n\t//console.log(\"WikifyResult: \"+ this.wikifyContainer.textContent);\n\tthis.wikifyResult = this.wikifyContainer.textContent;\n    return this.wikifyResult;\n};\n\nRenderTableWidget.prototype.sort_by = function(field, reverse, primer){\n   var key = function (x) {return primer ? primer(x[field]) : x[field]};\n   return function (a,b) {\n\t   //parallel implementation to \"+[nsortcs[]]\"\n\t\tvar A = key(a), B = key(b);\n\t\tvar x,y,\n\t\t\tcompareNumbers = function(x,y) {\n\t\t\t\tvar result = \n\t\t\t\t\tisNaN(x) && !isNaN(y) ? (reverse ? -1 : 1) :\n\t\t\t\t\t!isNaN(x) && isNaN(y) ? (reverse ? 1 : -1) :\n\t\t\t\t\t\t\t\t\t\t\t(reverse ? y - x :  x - y);\n\t\t\t\treturn result;\n\t\t\t};\n\t\tx = Number(A);\n\t\ty = Number(B);\n\t\tif((!isNaN(x) || !isNaN(y))) {\n\t\t\treturn compareNumbers(x,y);\n\t\t} else if($tw.utils.isDate(A) && $tw.utils.isDate(B)) {\n\t\t\treturn reverse ? B - A : A - B;\n\t\t} else {\n\t\t\tA = String(A);\n\t\t\tB = String(B);\n\t\t\treturn reverse ? B.localeCompare(A) : A.localeCompare(B);\n\t\t}\n\t}\n};\n\nexports.rendertable = RenderTableWidget;\n\n})();\n\n",
            "bag": "default",
            "revision": "0",
            "type": "application/javascript",
            "title": "$:/plugins/telarus/rendertable/Widgets/rendertable.js",
            "tags": "",
            "module-type": "widget",
            "modifier": "Josh F",
            "modified": "20171027060337560",
            "creator": "0.0.0.0",
            "created": "20171015232611361"
        }
    }
}